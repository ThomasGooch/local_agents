name: PR Check

on:
  pull_request:
    branches: [ main ]

jobs:
  # Build and test in sequence for PRs
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Cache Poetry dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-3.11-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          venv-${{ runner.os }}-3.11-
          
    - name: Install dependencies
      run: poetry install --with dev
      
    - name: Build package
      run: |
        poetry build
        poetry run python -c "import local_agents; print('Build successful!')"
        
    - name: Run linting
      run: |
        poetry run flake8 src/local_agents tests --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run black --check src/ tests/
        poetry run isort --check-only src/ tests/
        
    - name: Run core unit tests
      run: |
        poetry run pytest tests/unit --ignore=tests/unit/test_agents -v --tb=short --timeout=30 --cov=src/local_agents --cov-report=xml
        
    - name: Run agent tests
      run: |
        poetry run pytest tests/unit/test_agents -v --tb=short --timeout=30
        
    - name: Run integration tests  
      run: |
        poetry run pytest tests/integration -v --tb=short --timeout=60 --maxfail=3
        
    - name: Upload coverage
      if: success()
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false